apply plugin: 'com.android.application'
apply from: "../gradle/version.gradle"
apply from: "../gradle/common.gradle"
apply from: "../gradle/kotlin.gradle"
apply from: "../gradle/test.gradle"

android {
    signingConfigs {
        config {
            storeFile new File(project.rootDir, RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
        debug {
            storeFile new File(new File(project.rootDir, "gradle"), "debug.keystore")
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    defaultConfig {
        // 启用多Dex文件支持
        multiDexEnabled true
        // 使用矢量图
        vectorDrawables.useSupportLibrary = true
    }

    /**
     * 编译类型
     * {@link com.android.build.gradle.internal.dsl.BuildType}
     */
    buildTypes {
        // release正式包
        release {
            // 启用自动过滤删除无用res资源文件，依赖于 minifyEnabled
            shrinkResources true
            // 启用zip压缩文件4字节对齐，以读取资源时更有效率
            zipAlignEnabled true
            // 代码混淆
            minifyEnabled true
            // 签名
            signingConfig signingConfigs.config
            // 混淆文件
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            // 添加文件夹下的混淆配置文件
            project.file('proguard-rules').list().each { file ->
                if (file.endsWith(".pro")) {
                    proguardFile 'proguard-rules' + File.separator + file
                }
            }
        }
        // abTest灰度测试包
        abtest {
            debuggable true
            // abTest灰度测试添加后缀
            applicationIdSuffix ".abtest"
            // 签名
            signingConfig signingConfigs.debug
        }
        // debug测试运行、包
        debug {
            debuggable true
            // debug添加后缀
            applicationIdSuffix ".debug"
            // 签名
            signingConfig signingConfigs.debug
        }
    }

    dexOptions {
        additionalParameters '--set-max-idx-number=48000'
        // 是否支持大工程模式
        jumboMode true
        // 预编译
        preDexLibraries true
        // 线程数
        threadCount 5
    }

    aaptOptions {
        // 禁用cruncher, 以加速编译
        cruncherEnabled = false
        cruncherProcesses = 0
    }

    compileOptions {
        // 开启增量编译
        incremental = true
    }

    // 如果出现META-INF重复的问题 - 友盟社会化登录、分享
    // 打包时排除一些文件
    packagingOptions {
        // support支持库
        exclude 'META-INF/*.version'
        exclude 'androidsupportmultidexversion.txt'
        // 部分sdk的混淆文件
        exclude 'META-INF/proguard/**'
    }
}

// DI依赖注入、Debug调试工具、运行时权限处理依赖
dependencies {
    implementation deps.androidx.multidex.core

    // 网络
    implementation deps.network.okhttp
    implementation deps.network.retrofit.core
    implementation deps.network.retrofit.gson
    // Glide 图片加载库
    implementation deps.glide.core
}
